{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fadliselaz/next/next_pdip/pages/test/[query].jsx\";\n\nconst Test = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: e.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: e.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this)]\n    }, e.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\nTest.getInitialProps = async context => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${context.params.query}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const posts = await res.json();\n  return {\n    props: {\n      posts\n    }\n  };\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/fadliselaz/next/next_pdip/pages/test/[query].jsx"],"names":["Test","posts","map","e","title","body","id","getInitialProps","context","res","fetch","params","query","method","headers","json","props"],"mappings":";;;;AAAA,MAAMA,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAWC,CAAD,iBACT;AAAA,8BACE;AAAA,kBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,CAAC,CAACE;AAAN;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUF,CAAC,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAUD,CAXD;;AAaAN,IAAI,CAACO,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACxC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,8CAA6CF,OAAO,CAACG,MAAR,CAAeC,KAAM,EAD9C,EAErB;AACEC,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFX,GAFqB,CAAvB;AASA,QAAMb,KAAK,GAAG,MAAMQ,GAAG,CAACM,IAAJ,EAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLf,MAAAA;AADK;AADF,GAAP;AAKD,CAhBD;;AAkBA,eAAeD,IAAf","sourcesContent":["const Test = ({ posts }) => {\n  return (\n    <>\n      {posts.map((e) => (\n        <div key={e.id}>\n          <h3>{e.title}</h3>\n          <p>{e.body}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nTest.getInitialProps = async (context) => {\n  const res = await fetch(\n    `https://jsonplaceholder.typicode.com/posts/${context.params.query}`,\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const posts = await res.json();\n  return {\n    props: {\n      posts,\n    },\n  };\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}